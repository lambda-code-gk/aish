#!/bin/bash

#MODEL="gemini-1.5-flash"
MODEL="gemini-1.5-pro"

function make_message
{
  aish_rollout
  messages=$1
  query=$2
  system=$3
  parts=$(detail.aish_list_parts)

  echo '{' > $messages

  if [ ! -z "$system" ];
  then
    echo '"system_instruction": {"parts": {"text": "'$system'"}},' >> $messages
  fi

  echo '"contents":[' >> $messages

  for f in $parts;
  do
    input=$(jq -Rs '.' < $f)
    if [[ $f =~ "_user.txt" ]]; then
      echo '  {"role": "user", "parts":[{"text": '"$input"'}]},' >> $messages
    else
      echo '  {"role": "model", "parts":[{"text": '"$input"'}]},' >> $messages
    fi
  done

  user_input=$(echo -e "----\n# user message:\n$query" | jq -Rs '.')
  echo '  {"role": "user", "parts":[{"text": '"$user_input"'}]}' >> $messages

  echo ']}' >> $messages
}

function send_request
{
  request_data=$(cat $1)
  echo "$request_data" >> $AISH_SESSION/log.txt

  response=$(curl -s https://generativelanguage.googleapis.com/v1beta/models/$MODEL:generateContent?key=$GOOGLE_API_KEY \
    -H 'Content-Type: application/json' \
    -X POST \
    --data-binary @${1})

  echo "$response" >> $AISH_SESSION/log.txt

  text="$(echo "$response" | jq -r '.candidates[0].content.parts[0].text')"

  if [ "$text" == "null" -o -z "$text" ];
  then
    echo "$response"
    exit 1
  fi

  echo "$text" | tee $AISH_SESSION/part_$(date +%Y%m%d_%H%M%S)_assistant.txt
  echo "$text" | detail.aish_pickup_codeblock

  detail.aish_flush_script_log
  detail.aish_truncate_script_log
}
