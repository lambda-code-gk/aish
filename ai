#!/usr/bin/bash

. $HOME/.gptsh/functions

#set -x

function puts_error
{
  echo "Error: $1" >&2
}

# OpenAI APIキーを設定
if [ -z "$OPENAI_API_KEY" ];
then
  puts_error "The OPENAI_API_KEY is missing or empty. Please set the API key generated from the OpenAI website."
  exit 1;
fi
API_KEY="$OPENAI_API_KEY"

# APIエンドポイント
ENDPOINT="https://api.openai.com/v1/chat/completions"

#MODEL="gpt-4o"
MODEL="gpt-3.5-turbo"

SYSTEM_FILE=$HOME/.gptsh/system.txt

# メッセージ作成
gptsh_flush_script_log
gptsh_rollout
messages=$GPTSH_SESSION/messages.txt
echo '{"model": "'$MODEL'","messages": [' > $messages

for f in $GPTSH_SESSION/part_*;
do
  input=$(col -b < $f | jq -Rs .)
  if [[ $f =~ "_user.txt" ]]; then
    echo '  {"role": "user", "content": '$input'},' >> $messages
  else
    echo '  {"role": "assistant", "content": '$input'},' >> $messages
  fi
done
user_input=$(echo "----\nuser message for assistant:\n$*" | jq -Rs .)
echo '  {"role": "user", "content": '$user_input'},' >> $messages

system_input=$(jq -Rs . < $SYSTEM_FILE)
echo '  {"role": "system", "content": '$system_input'}' >> $messages
echo ']}' >> $messages

REQUEST_DATA=$(cat $messages)
echo $REQUEST_DATA >> $GPTSH_SESSION/log.txt

# curlコマンドを使ってリクエストを送信
response=$(curl -s -X POST $ENDPOINT \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $API_KEY" \
  -d "$REQUEST_DATA")

# レスポンスの"content"部分を抽出して出力
echo $response | jq -r '.choices[0].message.content' | tee $GPTSH_SESSION/part_$(date +%Y%m%d%H%M%S)_assistant.txt

gptsh_flush_script_log
gptsh_truncate_script_log
