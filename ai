#!/usr/bin/env bash


. $AISH_HOME/functions

#set -x

function puts_error
{
  echo "Error: $1" >&2
}

function cleanup_on_exit()
{
  # skip recording if the script is interrupted
  detail.aish_flush_script_log
  detail.aish_truncate_script_log
  echo
  exit $?
}
trap cleanup_on_exit EXIT INT TERM

APP_DIR=$(dirname "$(readlink -f "$0")")

# '+' disables getopt's argument reordering.
PARSED_OPTIONS=$(getopt -o +h --long +help,skip-security-check -n "$(basename "$0")" -- "$@")

eval set -- "$PARSED_OPTIONS"
while true; do
  case "$1" in
    --skip-security-check)
      skip_security_check="true"
      shift
      ;;
    -h|--help)
      help="true"
      shift
      ;;
    --) shift; break ;;
    *) puts_error "Unknown option: $1"; exit 1 ;;
  esac
done


task="$AISH_HOME/task.d/default"
if [ -e "$AISH_HOME/task.d/$1" ];
then
  task="$AISH_HOME/task.d/$1"
  shift
fi

if [[ "$help" == "true" ]];
then
  echo "Usage: `basename $0` [options] [task] [message]"
  echo "Options:"
  printf "  %s\t%s\n" "-h, --help" "Show this help message"
  printf "  %s\t%s\n" "--skip-security-check" "Skip security checks"
  echo
  echo "Tasks:"
  while read -r task_dir;
  do
    task_name=$(basename "$task_dir")
    if [ -e "$task_dir/conf" ]; then
      . $task_dir/conf
      echo -e "  $task_name\t$description"
      description=""
    fi
  done < <(find "$AISH_HOME/task.d" -mindepth 1 -maxdepth 1 -type d)| column -t -s $'\t'
  exit 0
fi

. $task/conf
. $task/execute
